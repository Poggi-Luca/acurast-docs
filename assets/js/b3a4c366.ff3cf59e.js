"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[421],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>h});var a=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,o=function(e,t){if(null==e)return{};var r,a,o={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=a.createContext({}),c=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,o=e.mdxType,n=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(r),h=o,y=u["".concat(l,".").concat(h)]||u[h]||d[h]||n;return r?a.createElement(y,i(i({ref:t},p),{},{components:r})):a.createElement(y,i({ref:t},p))}));function h(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=r.length,i=new Array(n);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<n;c++)i[c]=r[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},3096:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var a=r(7462),o=(r(7294),r(3905)),n=r(941),i=r(4996);const s={title:"Hyperdrive",slug:"/acurast-protocol/interoperability/hyperdrive"},l="Hyperdrive",c={unversionedId:"acurast-protocol/interoperability/hyperdrive",id:"acurast-protocol/interoperability/hyperdrive",title:"Hyperdrive",description:"The Hyperdrive interoperability module focuses on Web3.",source:"@site/docs/acurast-protocol/interoperability/hyperdrive.mdx",sourceDirName:"acurast-protocol/interoperability",slug:"/acurast-protocol/interoperability/hyperdrive",permalink:"/acurast-protocol/interoperability/hyperdrive",draft:!1,editUrl:"https://github.com/acurast/acurast-docs/docs/acurast-protocol/interoperability/hyperdrive.mdx",tags:[],version:"current",frontMatter:{title:"Hyperdrive",slug:"/acurast-protocol/interoperability/hyperdrive"},sidebar:"docs",previous:{title:"Enterprise",permalink:"/acurast-protocol/interoperability/enterprise"},next:{title:"Singularity",permalink:"/acurast-protocol/interoperability/singularity"}},p={},d=[{value:"How Does It Work?",id:"how-does-it-work",level:2},{value:"Acurast Marketplace Leverages Hyperdrive",id:"acurast-marketplace-leverages-hyperdrive",level:2}],u={toc:d};function h(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"hyperdrive"},"Hyperdrive"),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"Hyperdrive")," interoperability module focuses on ",(0,o.kt)("strong",{parentName:"p"},"Web3"),"."),(0,o.kt)("p",null,"Acurast Hyperdrive is a building block allowing for general bidirectional message passing between two blockchain networks."),(0,o.kt)("p",null,"It allows smart contracts on a source chain to store states that are verifiable on a target chain. It provides a generic way for contracts to communicate between chains by means of validating Merkle proofs about these states stored in the source chain."),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"More details to be added shortly")),(0,o.kt)("h2",{id:"how-does-it-work"},"How Does It Work?"),(0,o.kt)("p",null,"As an initial step, a trust anchor service is responsible for transmitting the Merkle root of snapshots between chains.\nIt means that for two chains (",(0,o.kt)("inlineCode",{parentName:"p"},"A")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"B"),"), that chain ",(0,o.kt)("inlineCode",{parentName:"p"},"B")," will know the Merkle root of snapshots contained in chain ",(0,o.kt)("inlineCode",{parentName:"p"},"A"),", and\nchain ",(0,o.kt)("inlineCode",{parentName:"p"},"A")," will also know ones in ",(0,o.kt)("inlineCode",{parentName:"p"},"B"),"."),(0,o.kt)("div",{class:"padding-vert--md"}),(0,o.kt)("center",null,(0,o.kt)(n.Z,{width:"480px",sources:{light:(0,i.Z)("/img/hyperdrive-relay.svg"),dark:(0,i.Z)("/img/hyperdrive-relay-dark.svg")},mdxType:"ThemedImage"})),(0,o.kt)("div",{class:"padding-vert--md"}),(0,o.kt)("p",null,"The Merkle roots transmitted by ",(0,o.kt)("strong",{parentName:"p"},"Acurast Processors")," in the step above allow smart contracts in a target chain to validate arbitrary states previously stored in a source chain by calling a validator smart contract with a proof-of-inclusion for that given state."),(0,o.kt)("div",{class:"padding-vert--md"}),(0,o.kt)("center",null,(0,o.kt)(n.Z,{width:"520px",sources:{light:(0,i.Z)("/img/hyperdrive-client-interaction.svg"),dark:(0,i.Z)("/img/hyperdrive-client-interaction-dark.svg")},mdxType:"ThemedImage"})),(0,o.kt)("div",{class:"padding-vert--md"}),(0,o.kt)("h2",{id:"acurast-marketplace-leverages-hyperdrive"},"Acurast Marketplace Leverages Hyperdrive"),(0,o.kt)("p",null,"Acurast leverages Hyperdrive to provide the best user experience for developers in their native ecosystem. Jobs, requests for interoperability resources, have to be created on the ",(0,o.kt)("a",{parentName:"p",href:"/acurast-marketplace"},"Acurast Marketplace")," to be assigned to Processors. To avoid that Consumers having to move assets and potentially create a new wallet on the Acurast Protocol thus creating more friction, Acurast uses Hyperdrive to establish a communication channel between a Web3 ecosystem and the Acurast Protocol."),(0,o.kt)("p",null,"Allowing Consumers to create a Job e.g. on Tezos through an Acurast Proxy Contract, pay their rewards in tez or a Tezos based asset. That Job request is then transported to the Acurast Protocol with Hyperdrive and matched on the Acurast Marketplace with Processors which then will directly communicate with the Tezos protocol and the defined destination where they will provide their verifiable output of the Consumer's request."))}h.isMDXComponent=!0}}]);